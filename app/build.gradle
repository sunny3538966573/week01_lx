apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.bw.week01_lx"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//recyclerview
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    //xrecyclerview
    implementation 'com.jcodecraeer:xrecyclerview:1.3.2'
//fresco
    implementation 'com.facebook.fresco:fresco:1.12.1'

//butterknife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
//rxjava2
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
//gson的解析器
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
//logging-interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
//AndroidSchedulers
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'    //此处填写你项目使用的sdk版本
            }
        }
    }
}
